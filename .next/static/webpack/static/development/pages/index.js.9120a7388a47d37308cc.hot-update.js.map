{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.9120a7388a47d37308cc.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Card, Button, Feed } from 'semantic-ui-react';\nimport chatroom from '../ethereum/chatroom.js';\nimport web3 from '../ethereum/web3.js';\nimport Head from 'next/head';\n\nclass Index extends Component {\n  static async getInitialProps() {\n    const accounts = await web3.eth.getAccounts();\n    const chatLength = await chatroom.methods.getMessagesLength().call({\n      from: accounts[0]\n    });\n\n    var chatLog = [];\n    var authors = [];\n    var usernames = [];\n\n    for (let i = 0; i < chatLength; i++) {\n      let message = await chatroom.methods.getMessage(i).call({\n        from: accounts[0]\n      });\n\n      let author = await chatroom.methods.getAuthor(i).call({\n        from: accounts[0]\n      });\n\n      let username = await chatroom.methods.getUsername(i).call({\n        from: accounts[0]\n      });\n\n      chatLog.push(message);\n      authors.push(author);\n      usernames.push(username);\n    }\n\n    for (let i = 0; i < chatLength; i++) {\n      let author = await chatroom.methods.getAuthor(i).call({\n        from: accounts[0]\n      });\n\n      authors.push(author);\n    }\n    console.log(authors);\n    return { chatLog, authors, usernames }\n  }\n\n  getAuthors(index) {\n    return this.props.authors[messageID];\n  }\n\n  renderChat() {\n    const items = this.props.chatLog.map(string => {\n      return {\n        header: string,\n        description: this.getUsernames(this.props.chatLog.indexOf(string)),\n        fluid: true\n      };\n    });\n\n    return <Card.Group items={items}/>\n    console.log(items);\n  }\n\n\n  render() {\n    return(\n      <div>\n        <Head>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n          />\n        </Head>\n\n        <h1>Chatroom Application</h1>\n\n        <Card fluid>\n          <Card.Content>\n            <Card.Header>Chatroom</Card.Header>\n          </Card.Content>\n          <Card.Content>\n              {this.renderChat()}\n          </Card.Content>\n        </Card>\n\n\n      </div>\n    );\n  }\n}\n\nexport default Index;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAwCA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;AAhFA;AACA;;AADA;;AACA;AACA;AADA;AACA;;AADA;AAIA;AACA;AACA;AAEA;AACA;;AADA;;;;;;AACA;AACA;AADA;AACA;;AADA;;AAIA;AACA;AADA;AACA;;AADA;;AAIA;AACA;AADA;AACA;;AADA;AAIA;AACA;AACA;AACA;;AAhBA;;;;;AAkBA;AACA;;AADA;;;;;;AACA;AACA;AADA;AACA;;AADA;AAIA;AACA;;AANA;;;;;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;AAtCA;AACA;AAoFA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}